dtSubjectTest  <- fread(file.path(datasetPath, "test", "subject_test.txt"))
dtSubjectTest
dtSubjectTrain
dtActivityTrain
dtSubjectTrain <- fread(file.path(datasetPath, "train", "subject_train.txt"))
dtActivityTrain <- fread(file.path(datasetPath, "train", "Y_train.txt"))
dtSubjectTest  <- fread(file.path(datasetPath, "test" , "subject_test.txt" ))
dtActivityTest  <- fread(file.path(datasetPath, "test" , "Y_test.txt" ))
dtTrainSet <- fread(file.path(datasetPath, "train", "X_train.txt"))
df <- read.table(file.path(datasetPath, "train", "X_train.txt"))
df <- read.table(file.path(datasetPath, "train", "X_train.txt"))
head(df,10)
head(df,1)
class(df)
dataFrameToDataTable <- function(path){
dataFrame <- read.table(path)
dataTable <- data.table(dataFrame)
};
dtTrainSet <- dataFrameToDataTable(file.path(datasetPath, "train", "X_train.txt"))
dtTestSet  <- dataFrameToDataTable(file.path(datasetPath, "test" , "Y_test.txt" ))
head(dtTrainSet,10)
head(dtTestSet,1)
dtTestSet  <- dataFrameToDataTable(file.path(datasetPath, "test" , "X_test.txt" ))
fread(file.path(datasetPath, "train", "X_train.txt"))
fread(file.path(datasetPath, "train", "X_train.txt"), sep="")
fread(file.path(datasetPath, "train", "X_train.txt"), sep=" ")
head(dtSubjectTrain, 1)
head(dtSubjectTest,1)
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
dtSubjectTrain <- fread(file.path(datasetPath, "train", "subject_train.txt"))
dtSubjectTest  <- fread(file.path(datasetPath, "test" , "subject_test.txt" ))
head(dtSubjectTrain, 1)
head(dtSubjectTest,1)
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
dtSubject
table(dtSubject)
head(dtSubject,10)
str(dtSubject,10)
str(dtSubject,10)
summary(dtSubject,10)
str(dtSubject,10)
str(dtSubjectTrain)
str(dtSubjectTrain)
dim (dtSubjectTrain)
dim(dtSubject)
dim (dtSubjectTest)
dtSubjects
dtSubjects <- rbind(dtSubjectTrain, dtSubjectTest)
dtSubjects
setnames(dtSubject, "V1", "subject")
dtSubject
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
dtSubject
names(dtSubject)
names(dtSubject) <- "subject"
colnames(dtSubject) <- "subject"
colnames(dtSubject) <- "subject"
colnames(dtSubject)
dtSubject
dtLabels <- rbind(dtLabelsTrain, dtSubjectTest)
fread(file.path(datasetPath, "train", "X_train.txt"), sep=" ")
dtLabelsTest  <- fread(file.path(datasetPath, "test" , "Y_test.txt" ))
dtLabelsTrain <- fread(file.path(datasetPath, "train", "Y_train.txt"))
dtLabels <- rbind(dtLabelsTrain, dtSubjectTest)
dtLabels
dtLabels
setnames(dtLabels, "V1", "label")
dtLabels
dtLabels <- rbind(dtLabelsTrain, dtSubjectTest)
setnames(dtLabels, "V1", "activityLabel")
dtLabels
dtSet <- rbind(dtTrainSet, dtTestSet)
dtSet
class(dtSet)
?setkey
dtSubject
dtSubject <- cbind(dtSubject,dtLabels)
dtSubject
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
# Rename the col name.
setnames(dtSubject, "V1", "subject")
dtLabels <- rbind(dtLabelsTrain, dtSubjectTest)
setnames(dtLabels, "V1", "activityLabel")
dtSet <- rbind(dtTrainSet, dtTestSet)
dtGeneral <- cbind(dtSubject,dtLabels)
dtGeneral
dtGeneral <- cbind(dtGeneral, dtSet)
dtGeneral
dtSubject <- cbind(dtSubject, dtActivity)
dtSubject <- cbind(dtSubject, dtLabels)
dt <- cbind(dtSubject, dt)
dtSubject <- cbind(dtSubject, dtLabels)
dtSubject
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
# Rename the col name.
setnames(dtSubject, "V1", "subject")
dtSubject <- cbind(dtSubject, dtLabels)
dtSet <- cbind(dtSubject, dtSet)
dtSet
dtGeneral
dtGeneral
setkey(dtGeneral, subject, activityLabel)
dtGeneral
dtGeneral
dtFeatures <- fred(file.path(generalPath, "features.txt"))
dtFeatures <- fread(file.path(generalPath, "features.txt"))
dtFeatures <- fread(file.path(generalPath, "features.txt"))
fread(file.path(generalPath, "features.txt"))
fread(file.path(generalPath, "features.txt"))
dtFeatures <- fread(file.path(generalPath, "features.txt"))
fread(file.path(generalPath, "features.txt"))
fread(file.path(datasetPath, "features.txt"))
fread(file.path(datasetPath, "features.txt"))
fread(file.path(datasetPath, "features.txt"))
dtFeatures
dtFeatures <- fread(file.path(datasetPath, "features.txt"))
dtFeatures
setnames(dtFeatures, c("V1","V2"), c("featureNum","featureName")
setnames(dtFeatures, c("V1","V2"), c("featureNum","featureName"))
dtFeatures <- fread(file.path(datasetPath, "features.txt"))
setnames(dtFeatures, c("V1","V2"), c("featureNum","featureName"))
dtFeatures
?grepl
dtFeatures[grepl("mean"),featureName]
dtFeatures[grepl("mean",featureName)]
dtFeatures[grepl("mean\\(\\)", featureName)]
dtFeatures[grepl("mean()",featureName)]
dim(dtFeatures[grepl("mean()",featureName)])
dim(dtFeatures[grepl("mean\\(\\)", featureName)])
dim(dtFeatures[grepl("mean\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)", featureName)])
dim(dtFeatures[grepl("mean\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)", featureName)])
dim(dtFeatures[grepl("mean\\|std\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)])
dim(dtFeatures[grepl("mean\\(|std\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)])
dim(dtFeatures[grepl("mean\\(|std\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)])
dtFeatures[grepl("mean\\(|std\\(",featureName)]
dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dimdtFeatures[grepl("mean(|std\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)])
dimdtFeatures[grepl("mean\\(|std\\(",featureName)])
dim(dtFeatures[grepl("mean(|std\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)])
dim(dtFeatures[grepl("mean(|std\\(",featureName)])
dim(dtFeatures[grepl("mean\\(|std\\(",featureName)])
dim(dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)])
dim(dtFeatures[grepl("mean(|std\\(",featureName)])
dtFeatures[grepl("mean\\(|std\\(",featureName)]
dtFeatures <- dtFeatures[grepl("mean\\(|std\\(",featureName)]
dtFeatures
dtFeatures
?paste0
dtFeatures[, paste0("V", featureNum)]
hipo <- dtFeatures[, paste0("V", featureNum)]
hipo
hipo <- dtFeatures
hipo$featureCode <- hipo[, paste0("V", featureNum)]
head(hipo)
hipo$featureCode
select <- c(key(dtGeneral), dtFeatures$featureCode)
select
key(dtGeneral)
c(key(dtGeneral), dtFeatures$featureCode)
c(key(dtGeneral), hipo$featureCode)
c(key(dtGeneral), hipo$featureCode)
dtGeneral
c(key(dtGeneral), hipo$featureCode)
select <- c(key(dtGeneral), hipo$featureCode)
select
dtGeneral[, select, with=FALSE]
hipo[, paste0("V", featureNum)]
hipo[, featureNum]
hipo[, "V" + featureNum]
?paste
dtFeatures$featureId <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
c(key(dtGeneral), hipo$featureCode)
hipo
c(key(dtGeneral), dtFeatures$featureCode)
c(key(dtGeneral), dtFeatures$featureId)
dtGeneral[, c(key(dtGeneral), dtFeatures$featureId), with=FALSE]
dtGeneral <- dtGeneral[, c(key(dtGeneral), dtFeatures$featureId), with=FALSE]
dtGeneral
dtActivityLabels <- fread(file.path(datasetPath, "activity_labels.txt"))
dtActivityLabels
setnames(dtActivityLabels, names(dtActivityLabels), c("activityId", "activityName"))
dtActivityLabels
dtGeneral
merge(dtGeneral, dtActivityLabels, by="activityId", all.x=TRUE)
merge(dtGeneral, dtActivityLabels, by="activityId", all.x=TRUE)
dtActivityLabels
dtActivityLabels <- fread(file.path(datasetPath, "activity_labels.txt"))
setnames(dtActivityLabels, names(dtActivityLabels), c("activityId", "activityName"))
merge(dtGeneral, dtActivityLabels, by="activityId", all.x=TRUE)
dtGeneral
head(dtGeneral,1)
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
# Rename the col name.
setnames(dtSubject, "V1", "subject")
# Merges the labels by row
dtLabels <- rbind(dtLabelsTrain, dtSubjectTest)
setnames(dtLabels, "V1", "activityId")
# Merges the sets by row, no need set a name.
dtSet <- rbind(dtTrainSet, dtTestSet)
# Merge by colums to obtain one big data table.
# Merges the subject with the avtivity labels (numbers).
dtGeneral <- cbind(dtSubject,dtLabels)
# Merges the sets.
dtGeneral <- cbind(dtGeneral, dtSet)
# Sets a key for the dt
setkey(dtGeneral, subject, activityLabel)
setwd("C:\\Users\\gomezaa\\Documents\\GitHub\\DataScienceWithR\\3GettingandCleaningData\\Project")
generalPath <- getwd()
datasetPath <- file.path(generalPath, "UCI HAR Dataset")
list.files(datasetPath)
dtSubjectTrain <- fread(file.path(datasetPath, "train", "subject_train.txt"))
dtSubjectTest  <- fread(file.path(datasetPath, "test" , "subject_test.txt" ))
dtLabelsTrain <- fread(file.path(datasetPath, "train", "Y_train.txt"))
dtLabelsTest  <- fread(file.path(datasetPath, "test" , "Y_test.txt" ))
# Reads the sets for train and test.
dataFrameToDataTable <- function(path){
dataFrame <- read.table(path)
dataTable <- data.table(dataFrame)
};
dtTrainSet <- dataFrameToDataTable(file.path(datasetPath, "train", "X_train.txt"))
dtTestSet  <- dataFrameToDataTable(file.path(datasetPath, "test" , "X_test.txt" ))
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
# Rename the col name.
setnames(dtSubject, "V1", "subject")
# Merges the labels by row
dtLabels <- rbind(dtLabelsTrain, dtSubjectTest)
setnames(dtLabels, "V1", "activityId")
# Merges the sets by row, no need set a name.
dtSet <- rbind(dtTrainSet, dtTestSet)
# Merge by colums to obtain one big data table.
# Merges the subject with the avtivity labels (numbers).
dtGeneral <- cbind(dtSubject,dtLabels)
# Merges the sets.
dtGeneral <- cbind(dtGeneral, dtSet)
# Sets a key for the dt
setkey(dtGeneral, subject, activityId)
dtFeatures <- fread(file.path(datasetPath, "features.txt"))
setnames(dtFeatures, c("V1","V2"), c("featureNum","featureName"))
dtFeatures <- dtFeatures[grepl("mean\\(|std\\(",featureName)]
dtFeatures$featureId <- dtFeatures[, paste0("V", featureNum)]
dtGeneral <- dtGeneral[, c(key(dtGeneral), dtFeatures$featureId), with=FALSE]
dtActivityLabels <- fread(file.path(datasetPath, "activity_labels.txt"))
setnames(dtActivityLabels, names(dtActivityLabels), c("activityId", "activityName"))
merge(dtGeneral, dtActivityLabels, by="activityId", all.x=TRUE)
dtActivityLabels
dtActivityLabels
head(dtGeneral,1)
mytest <- merge(dtGeneral, dtActivityLabels, by="activityId", all.x=TRUE)
head(mytest,1)
myTest$activityId = 2
mytest[activityId = 2]
mytest[activityId == 2]
dtGeneral
dtGeneral <- merge(dtGeneral, dtActivityLabels, by="activityId", all.x=TRUE)
dtGeneral
tail(dtGeneral)
tail(dtGeneral)
dtGeneral[activityid]
dtGeneral[activityid]
dtGeneral[activityid]
dtGeneral[,1]
dtGeneral[,activityId]
library ("data.table")
setwd("C:\\Users\\gomezaa\\Documents\\GitHub\\DataScienceWithR\\3GettingandCleaningData\\Project")
generalPath <- getwd()
generalPath
datasetPath <- file.path(generalPath, "UCI HAR Dataset")
list.files(datasetPath)
dtSubjectTrain <- fread(file.path(datasetPath, "train", "subject_train.txt"))
dtSubjectTest  <- fread(file.path(datasetPath, "test" , "subject_test.txt" ))
dtLabelsTrain <- fread(file.path(datasetPath, "train", "Y_train.txt"))
dtLabelsTest  <- fread(file.path(datasetPath, "test" , "Y_test.txt" ))
dtLabelsTrain
dtLabelsTest
head(dtLabelsTrain,100)
head(dtLabelsTest,100)
dataFrameToDataTable <- function(path){
dataFrame <- read.table(path)
dataTable <- data.table(dataFrame)
};
dtTrainSet <- dataFrameToDataTable(file.path(datasetPath, "train", "X_train.txt"))
dtTestSet  <- dataFrameToDataTable(file.path(datasetPath, "test" , "X_test.txt" ))
dtTrainSet
rbind(dtSubjectTrain, dtSubjectTest)
dtSubjectTrain
head(dtSubjectTrain,100)
head(dtSubjectTrain,1000)
head(dtSubjectTrain,100)
head(dtSubjectTrain,100)dtSubjectTest
dtSubjectTest
# Merge the subjects by row
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
# Rename the col name.
setnames(dtSubject, "V1", "subject")
# Merges the labels by row
dtLabels <- rbind(dtLabelsTrain, dtLabelsTest)
setnames(dtLabels, "V1", "activityId")
dtSet <- rbind(dtTrainSet, dtTestSet)
)
dtGeneral
dtSet
dtGeneral <- cbind(dtSubject,dtLabels)
dtGeneral
dtGeneral[activityId]
dtGeneral[,activityId]
sum(dtGeneral[,activityId])
summarise(dtGeneral[,activityId])
summarize(dtGeneral[,activityId])
summary(dtGeneral[,activityId])
dtGeneral
dtGeneral <- cbind(dtGeneral, dtSet)
dtGeneral
setkey(dtGeneral, subject, activityId)
dtFeatures <- fread(file.path(datasetPath, "features.txt"))
setnames(dtFeatures, c("V1","V2"), c("featureNum","featureName"))
# Gets only the mean "mean" and standard deviation "std" features.
# Searh for the patter to replace.
dtFeatures <- dtFeatures[grepl("mean\\(|std\\(",featureName)]
# Adds a new column wiht the feature id, based in the current variable name (v1,v2,etc)
dtFeatures$featureId <- dtFeatures[, paste0("V", featureNum)]
# Subsets only the "dtFeatures$featureId"  variables.
dtGeneral <- dtGeneral[, c(key(dtGeneral), dtFeatures$featureId), with=FALSE]
dtActivityLabels <- fread(file.path(datasetPath, "activity_labels.txt"))
setnames(dtActivityLabels, names(dtActivityLabels), c("activityId", "activityName"))
# Adds the activity names to the general data set.
dtGeneral <- merge(dtGeneral, dtActivityLabels, by="activityId", all.x=TRUE)
tail(dtGeneral)
dtGeneral[,activityId]
tail(dtGeneral)
setkey(dtGeneral, subject, activityId, activityName)
data.table( melt(dtGeneral, key(dtGeneral), variable.name="featureId"))
dt <- data.table( melt(dtGeneral, key(dtGeneral), variable.name="featureId"))
dt
dtGeneral <- data.table( melt(dtGeneral, key(dtGeneral), variable.name="featureId"))
dtGeneral
dtFeatures[, list(featureNum, featureCode, featureName)]
dtFeatures[, list(featureId, featureCode, featureName)]
dtFeatures
dtFeatures[, list(featureNum, featureId, featureName)]
featureReordered <- dtFeatures[, list(featureNum, featureId, featureName)]
featureReordered
featureOrder <- dtFeatures[, list(featureNum, featureId, featureName)]
featureOrder
merge(dt,featureOrder , by="featureId", all.x=TRUE)
dtGeneral
featureOrder
dt
featureOrder <- dtFeatures[, list(featureNum, featureId, featureName)]
dtGeneral <- merge(dt,featureOrder , by="featureId", all.x=TRUE)
dtGeneral
dt
dt <- merge(dt,featureOrder , by="featureId", all.x=TRUE)
dt
dt <- dtGeneral
dt
factor(dt$activityName)
factor(dt$featureName)
factor(dt$activityName)
dt$activity <- factor(dt$activityName)
factor(dt$featureName)
dt$feature <- factor(dt$featureName)
dt
dt
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
## Features with 1 category
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
## Features with 3 categories
n <- 3
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
dt
r1 <- nrow(dt[, .N, by=c("feature")])
r2 <- nrow(dt[, .N, by=c("featDomain", "featAcceleration", "featInstrument", "featJerk", "featMagnitude", "featVariable", "featAxis")])
r1 == r2
grepthis("^t")
?grepl
dt  <- dtGeneral
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
# # Features with 2 categories
n <- 2
# Gets the "Time" and  "Freq".
y <- matrix( seq(1, n), nrow = n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
# Gets the "Accelerometer" and "Gyroscope".
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
# Gets the "Body" and "Gravity".
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
# Gets the "Mean" and "SD"
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
# # Features with 3 categories
n <- 3
# Gets the Axis "X" "Y" and "Z".
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c( grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featJerk <- factor(grepthis("Jerk"), labels = c(NA, "Jerk"))
dt$activity <- factor(dt$activityName)
dt$featJerk <- factor(grepthis("Jerk"), labels = c(NA, "Jerk"))
dt$feature <- factor(dt$featureName)
dt$featJerk <- factor(grepthis("Jerk"), labels = c(NA, "Jerk"))
factor(dtGeneral$activityName)
dtGeneral2 <- dtGeneral
dtGeneral$activity <- factor(dtGeneral$activityName)
dtGeneral$feature <- factor(dtGeneral$featureName)
dt  <- dtGeneral2
dt
dt$activity <- factor(dt$activityName)
dt$feature <- factor(dt$featureName)
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
dt$featJerk <- factor(grepthis("Jerk"), labels = c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
# # Features with 2 categories
n <- 2
# Gets the "Time" and  "Freq".
y <- matrix( seq(1, n), nrow = n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
# Gets the "Accelerometer" and "Gyroscope".
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
# Gets the "Body" and "Gravity".
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
# Gets the "Mean" and "SD"
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
# # Features with 3 categories
n <- 3
# Gets the Axis "X" "Y" and "Z".
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c( grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
setkey(dt, subject, activity, featDomain, featAcceleration, featInstrument, featJerk, featMagnitude, featVariable, featAxis)
dtTidy <- dt[, list(count = .N, average = mean(value)), by=key(dt)]
dtTidy
dtGeneral
findPattern <- function (regex) {
grepl(regex, dtGeneral$feature)
}
dtGeneral$featureJerk <- factor(findPattern("Jerk"), labels=c(NA, "Jerk"))
dtGeneral$featureMagnitude <- factor(findPattern("Mag"), labels=c(NA, "Magnitude"))
# # Features with 2 categories
n <- 2
# Gets the "Time" and  "Freq".
y <- matrix( seq(1, n), nrow = n)
x <- matrix(c(findPattern("^t"), findPattern("^f")), ncol=nrow(y))
dtGeneral$featureDomain <- factor(x %*% y, labels=c("Time", "Freq"))
# Gets the "Accelerometer" and "Gyroscope".
x <- matrix(c(findPattern("Acc"), findPattern("Gyro")), ncol=nrow(y))
dtGeneral$featureInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
# Gets the "Body" and "Gravity".
x <- matrix(c(findPattern("BodyAcc"), findPattern("GravityAcc")), ncol=nrow(y))
dtGeneral$featureAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
# Gets the "Mean" and "SD"
x <- matrix(c(findPattern("mean()"), findPattern("std()")), ncol=nrow(y))
dtGeneral$featureVariable <- factor(x %*% y, labels=c("Mean", "SD"))
# # Features with 3 categories
n <- 3
# Gets the Axis "X" "Y" and "Z".
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c( findPattern("-X"), findPattern("-Y"), findPattern("-Z")), ncol=nrow(y))
dtGeneral$featureAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
setkey(dt, subject, activity, featureDomain, featureAcceleration, featureInstrument, featureJerk, featureMagnitude, featureVariable, featureAxis)
dtTidy <- dt[, list(count = .N, average = mean(value)), by = key(dt)]
setkey(dtGeneral, subject, activity, featureDomain, featureAcceleration, featureInstrument, featureJerk, featureMagnitude, featureVariable, featureAxis)
TidyDataSet <- dtGeneral[, list(count = .N, average = mean(value)), by = key(dtGeneral)]
TidyDataSet
write.table(TidyDataSet, row.name=FALSE)
fileConn<-file("output.txt")
write.table(TidyDataSet, row.name=FALSE,fileConn)
fileConn<-file("TidyDataSet.txt")
write.table(TidyDataSet, row.name=FALSE,fileConn)
close(fileConn)
